[{"/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/index.js":"1","/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/reportWebVitals.js":"2","/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/App.js":"3","/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/Game.js":"4","/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/Home.js":"5","/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/atoms.js":"6"},{"size":572,"mtime":1624987293690,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1624959175618,"results":"9","hashOfConfig":"8"},{"size":397,"mtime":1624959306952,"results":"10","hashOfConfig":"8"},{"size":3665,"mtime":1624959348565,"results":"11","hashOfConfig":"8"},{"size":1643,"mtime":1624959389695,"results":"12","hashOfConfig":"8"},{"size":154,"mtime":1624995162756,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1th3qul",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/index.js",[],["29","30"],"/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/reportWebVitals.js",[],"/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/App.js",[],"/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/Game.js",["31","32","33","34","35","36","37","38"],"import React, { useEffect, useState } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { socket } from './atoms'\nimport './styles.css'\nimport {useHistory} from 'react-router-dom'\n\nconst Game = () => {\n\n    const [number, setNumber] = useState('Get Ready')\n    const [firstNumber, setFirstNumber] = useState(0)\n    const [secondNumber, setSecondNumber] = useState(0)\n    let [score, setScore] = useState(0)\n\n    const [numOfUsers, setNumOfUsers] = useState(0)\n    const [loser, setLoser] = useState(false)\n    const [winner, setWinner] = useState(false)\n    const [roundLost, setRoundLost] = useState(false)\n    const [roundWon, setRoundWon] = useState(false)\n    const [won, setWon] = useState(false)\n    const [lost, setLost] = useState(false)\n    const [game, setGame] = useState(true)\n\n    const history = useHistory()\n\n    const connectedSocket = useRecoilValue(socket)\n\n    useEffect(() => {\n            if(number === 0) {\n                    console.log('win')\n                    connectedSocket.emit('userWins')\n                    setScore(score + 1)\n                    connectedSocket.emit('score', score)\n\n         \n                       \n\n                    setRoundWon(false)\n                   \n            }\n            else if (number < 0) {\n\n                console.log('lost')\n                    connectedSocket.emit('lost')\n\n                    \n\n            }\n    }, [number, connectedSocket])\n    \n\n    connectedSocket.on('loser', (value) => {\n        setLoser(value)\n\n        setTimeout(() => {\n            setLoser(false)\n        }, 1000)\n        console.log('loser',loser)\n    })\n    connectedSocket.on('winner', (value) => {\n        setWinner(value)\n        setTimeout(() => {\n            setWinner(false)\n        }, 1000)\n        console.log('winner',winner)\n    })\n\n    useEffect(() => {\n\n        connectedSocket.on('won', (value) => {\n            setGame(false)\n            setWon(value)\n            setWinner(value)\n            setLoser(!value)\n            \n        })\n        connectedSocket.on('lost', (value) => {\n            setGame(false)\n            setLost(value)\n            setWinner(!value)\n            setLoser(value)\n        })\n\n    }, [])\n\n    \n\n\n   \n    console.log(score)\n\n   \n\n    useEffect(() => {\n\n        \n\n            connectedSocket.on('generatedNum', (info) => {\n                console.log(info)\n                setNumber(info[0])\n                setFirstNumber(info[1])\n                setSecondNumber(info[2])\n            })\n\n           \n    }, [])\n\n\n   \n\n    const decrement = (num) => {\n        setNumber(number - num)\n    }\n\n    return (\n        \n        <div className = 'game'>\n\n\n            {lost && <div><h1>You lost</h1><button onClick = {() => {window.location = '/'}}>Return Home</button></div>}\n            {won && <div><h1>You won</h1><button onClick = {() => {window.location = '/'}}>Return Home</button></div>}\n\n\n\n            {winner && <h1>Winner</h1>}\n            {loser && <h1>Loser</h1>}\n\n            {roundWon && <h1>Round Won!</h1>}\n\n            {(!winner && !loser && game) &&\n            <>\n                    <h1>{number}</h1>\n                \n                <div>\n                    <button className = 'game_button' disabled = {winner} onClick = {() => decrement(firstNumber)}>-{firstNumber}</button>\n                    <button className = 'game_button' onClick = {() => decrement(secondNumber)}>-{secondNumber}</button>\n                    <button className = 'game_button' onClick = {() => decrement(1)}>{-1}</button>\n                </div>\n            </>\n                }\n\n\n                \n\n            \n            \n        </div>\n    )\n}\n\nexport default Game\n","/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/Home.js",["39","40"],"import React, { useEffect, useState } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport {socket} from './atoms'\nimport { useHistory } from 'react-router-dom'\n\n// http://192.168.0.221:3000\n\nconst Home = () => {\n\n  \n\n  const connectedSocket = useRecoilValue(socket)\n\n  const history = useHistory()\n\n  const [name, setName] = useState('')\n  const [room, setRoom] = useState('')\n  const [numOfUsers, setNumOfUsers] = useState(0)\n  const [loading, setLoading] = useState('')\n\n  useEffect(() => {\n    console.log(connectedSocket)\n  }, [connectedSocket])\n\n  useEffect(() => {\n\n    connectedSocket.on('numOfUsers', (info) => {\n        console.log(info)\n    })\n\n}, [])\n\n  const joinGame = () => {\n      setLoading('Waiting for other users...')\n    connectedSocket.emit('join', {name, room})\n  }\n\n  useEffect(() => {\n    connectedSocket.on('numOfUsers', (info) => {\n      setNumOfUsers(info)\n    })\n        if(numOfUsers === 2) {\n            \n            history.push(`/game/${room}`)\n        }\n        \n\n        connectedSocket.emit('randomNumber')\n    \n  }, [numOfUsers])\n\n  \n\n\n\n  return (\n\n    <div className = 'home'>\n      <h1>Enter Game</h1>\n      <div>\n        <input\n          placeholder = \"Enter name\"\n          value = {name}\n          onChange = {(e) => setName(e.target.value)}\n        />\n      </div>\n      <div>\n        <input\n          placeholder = \"Enter room\"\n          value = {room}\n          onChange = {(e) => setRoom(e.target.value)}\n        />\n      </div>\n      <div>\n        <button onClick = {joinGame}>Start</button>\n      </div>\n\n      <div>\n          {loading}\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","/Users/jhaelintoliver/Desktop/React-Projects/decrementF/client/src/atoms.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":14,"column":12,"nodeType":"47","messageId":"48","endLine":14,"endColumn":22},{"ruleId":"45","severity":1,"message":"49","line":14,"column":24,"nodeType":"47","messageId":"48","endLine":14,"endColumn":37},{"ruleId":"45","severity":1,"message":"50","line":17,"column":12,"nodeType":"47","messageId":"48","endLine":17,"endColumn":21},{"ruleId":"45","severity":1,"message":"51","line":17,"column":23,"nodeType":"47","messageId":"48","endLine":17,"endColumn":35},{"ruleId":"45","severity":1,"message":"52","line":23,"column":11,"nodeType":"47","messageId":"48","endLine":23,"endColumn":18},{"ruleId":"53","severity":1,"message":"54","line":48,"column":8,"nodeType":"55","endLine":48,"endColumn":33,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":83,"column":8,"nodeType":"55","endLine":83,"endColumn":10,"suggestions":"58"},{"ruleId":"53","severity":1,"message":"57","line":105,"column":8,"nodeType":"55","endLine":105,"endColumn":10,"suggestions":"59"},{"ruleId":"53","severity":1,"message":"57","line":31,"column":4,"nodeType":"55","endLine":31,"endColumn":6,"suggestions":"60"},{"ruleId":"53","severity":1,"message":"61","line":50,"column":6,"nodeType":"55","endLine":50,"endColumn":18,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'numOfUsers' is assigned a value but never used.","Identifier","unusedVar","'setNumOfUsers' is assigned a value but never used.","'roundLost' is assigned a value but never used.","'setRoundLost' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'score'. Either include it or remove the dependency array. You can also do a functional update 'setScore(s => ...)' if you only need 'score' in the 'setScore' call.","ArrayExpression",["65"],"React Hook useEffect has a missing dependency: 'connectedSocket'. Either include it or remove the dependency array.",["66"],["67"],["68"],"React Hook useEffect has missing dependencies: 'connectedSocket', 'history', and 'room'. Either include them or remove the dependency array.",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},{"desc":"72","fix":"74"},{"desc":"72","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [number, connectedSocket, score]",{"range":"78","text":"79"},"Update the dependencies array to be: [connectedSocket]",{"range":"80","text":"81"},{"range":"82","text":"81"},{"range":"83","text":"81"},"Update the dependencies array to be: [connectedSocket, history, numOfUsers, room]",{"range":"84","text":"85"},[1402,1427],"[number, connectedSocket, score]",[2192,2194],"[connectedSocket]",[2514,2516],[666,668],[1060,1072],"[connectedSocket, history, numOfUsers, room]"]